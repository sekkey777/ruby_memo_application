# ■■■■■■■■■CSVファイルを扱うためのライブラリ読み込み■■■■■■■■■
require "csv"

# ■■■■■■■■■ユーザーへの指示■■■■■■■■■
puts "1 → 新規でメモを作成する / 2 → 既存のメモを編集する"

# ■■■■■■■■■ユーザーの入力値を取得し、数字へ変換■■■■■■■■■
memo_type = gets.to_i
puts "------------------------------------------------------------"

# ■■■■■■■■■「memo_type」の値（1 or 2）による条件分岐■■■■■■■■■

if memo_type == 1
  
  # ■■■■■■■■■ユーザーへの指示（ファイル名の入力）■■■■■■■■■
  puts "ファイル名を入力してください（拡張子を除く）"
  file_name = gets.chomp
  puts "------------------------------------------------------------"
  
  # ■■■■■■■■■ユーザーへの指示（メモ内容の入力）■■■■■■■■■
  puts "メモしたい内容を入力してください"
  puts "入力が完了したら「ctrl + D」を押してください"
  file_contents = STDIN.read
  CSV.open("#{file_name}.csv", "w") do |csv|
    csv << ["#{file_contents}"]
  end
  
  puts "------------------------------------------------------------"
  # ■■■■■■■■■ユーザーへ表示■■■■■■■■■
  puts "メモの内容を「#{file_name}.csv」として保存しました"

elsif memo_type == 2
  
  # ■■■■■■■■■ファイル一覧の表示■■■■■■■■■
  puts "ファイル一覧"
  Dir.glob("*.csv").each do |file|
    puts file
  end
  puts "------------------------------------------------------------"
  
  # ■■■■■■■■■ユーザーへの指示（編集するファイル名の入力）■■■■■■■■■
  puts "編集したいファイル名を入力してください（拡張子は除く）"
  file_name = gets.chomp
  puts "------------------------------------------------------------"
  
  # ■■■■■■■■■指定したファイル内の値を表示■■■■■■■■■
  if File.exist?("#{file_name}.csv")
    puts "現在の#{file_name}.csvの内容は下記です"
    CSV.foreach("#{file_name}.csv") do |data|
      puts data
    end
  else
    puts "指定したファイルは存在しません"
    exit
  end
  puts "------------------------------------------------------------"
  
  # ■■■■■■■■■指定したファイルに別の内容を上書き■■■■■■■■■
  puts "メモに追加したい内容を入力してください"
  puts "入力が完了したら「ctrl + D」を押してください"
  file_contents = STDIN.read
  CSV.open("#{file_name}.csv", "a") do |csv|
    csv << ["#{file_contents}"]
  end
  puts "------------------------------------------------------------"
  puts "「#{file_name}.csv」に新しく追加しました"
end